apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

project.archivesBaseName = 'dilatingdotsprogressbar'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.android.material:material:1.3.0'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'DilatingDotsProgressBar'

    publishedGroupId = 'com.github.justzak'
    libraryName = 'dilatingdotsprogressbar'
    artifact = 'dilatingdotsprogressbar'

    libraryDescription = 'An indeterminate progress bar with dots that expand and contract'

    siteUrl = 'https://github.com/JustZak/DilatingDotsProgressBar'
    gitUrl = 'https://github.com/JustZak/DilatingDotsProgressBar.git'

    libraryVersion = '1.0.1'

    developerId = 'ZakR'
    developerName = 'Zachary Reik'
    developerEmail = 'justzak7@gmail.com'

    licenseName = 'The MIT License'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

group = publishedGroupId
version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray

ext {
    binUser = 'user'
    binKey = 'key'
    binPass = 'pass'
    try {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        binUser = properties.getProperty("bintray.user");
        binKey = properties.getProperty("bintray.key");
        binPass = properties.getProperty("bintray.gpg.password");
    } catch (Exception e) {
    }
}

bintray {
    user = binUser
    key = binKey
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        licenses = allLicenses
        vcsUrl = gitUrl
        publish = true
        version {
            name = libraryVersion
            desc = libraryDescription
            released  = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = binPass
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

//install {
//    repositories.mavenInstaller {
//        pom.project {
//            name bintrayName
//            description libraryDescription
//            url siteUrl
//            inceptionYear '2016'
//
//            packaging 'aar'
//            groupId publishedGroupId
//            artifactId artifact
//            version libraryVersion
//
//            licenses {
//                license {
//                    name licenseName
//                    url licenseUrl
//                    distribution 'repo'
//                }
//            }
//            scm {
//                connection gitUrl
//                url siteUrl
//
//            }
//            developers {
//                developer {
//                    id developerId
//                    name developerName
//                    email developerEmail
//                }
//            }
//        }
//    }
//}
